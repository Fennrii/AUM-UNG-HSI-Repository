Bootstrap: docker
From: ubuntu:22.04

%setup
    # Create a directory called "workspace" at the root of the image's file system.
    mkdir ${SINGULARITY_ROOTFS}/workspace
    mkdir ${SINGULARITY_ROOTFS}/workspace/three_layer_classification
    #mkdir ${SINGULARITY_ROOTFS}/workspace/SpectralNet
    #mkdir ${SINGULARITY_ROOTFS}/workspace/A2S2KResNet
    # Create a directory called "data" and a directory called "Datasets" inside that folder on the host system.
    mkdir -p data/Datasets
%files
    # Copy files from the host machine to the workspce folder on the Singularity image.
    main.py /workspace
    #mainSpectral.py /workspace
    #mainTesting.py /workspace
    models.py /workspace
    datasets.py /workspace
    custom_datasets.py /workspace
    inference.py /workspace
    utils.py /workspace
    License /workspace
    README.md /workspace
    requirements.txt /workspace
    start.sh /workspace
    three_layer_classification/*.py /workspace/three_layer_classification
    #A2S2KResNet/*.py /workspace/A2S2KResNet
    #SpectralNet/*.py /workspace/SpectralNet
    
   
    
%environment
    # Set environment variables
    export LISTEN_PORT=8097
    export LC_ALL=C
    export PATH=/opt/conda/bin:$PATH
    export DEBIAN_FRONTEND=noninteractive

%post
    # Install necessary packages
    apt-get update 
    apt-get install -y curl
    apt-get install -y tzdata
    apt-get install -y bzip2
    apt-get install -y ca-certificates
    apt-get install ffmpeg libsm6 libxext6  -y
    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
    dpkg-reconfigure --frontend noninteractive tzdata
    curl -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh
    
    rm -rf /var/lib/apt/lists/*
    
%runscript
    # When the SIF file is run, it will download the packages listed in requirements.txt if not already installed.
    echo "installing packages"
    pip3 install --no-cache-dir -r /workspace/requirements.txt
    # It will then run start.sh
    sh /workspace/start.sh

%startscript
    nc -lp $LISTEN_PORT
    
%test
    grep -q NAME=\"Ubuntu\" /etc/os-release
    if [ $? -eq 0 ]; then
        echo "Container base is Ubuntu as expected."
    else
        echo "Container base is not Ubuntu."
    fi
%labels
    Author d@sylabs.io
    Version v0.0.1

%help
    This is a demo container used to illustrate a def file that uses all
    supported sections.
